.home {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  &::before {
    flex: 1;
    content: "";
  }

  &::after {
    flex: 2;
    content: "";
  }

  .close-button {
    position: absolute;
    top: 2rem;
    right: 2rem;
    transition: transition(transform, $easing: bounce-in, $duration: slow);
    transform: scale(0);
  }

  .mode-selector {
    &[data-mode] {
      ~ .close-button {
        transition-timing-function: easing(bounce-out);
        transform: scale(1.5);
      }
    }
  }
}

.mode-selector {
  display: flex;
  justify-content: center;
  align-items: flex-start;

  &__or {
    align-self: stretch;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 1rem;
    color: var(--border);
    pointer-events: none;
    touch-action: none;
    transform: rotate(7deg);

    &::before,
    &::after {
      content: "";
      flex: 1;
      border-left: 1px solid currentColor;
      margin: 0 -0.5px;
      transition: transition(transform opacity, $duration: 500ms);
    }

    b {
      font-weight: normal;
      text-transform: uppercase;
      color: var(--text-secondary);
      font-size: 1.25rem;
      line-height: 3rem;
      width: 3rem;
      text-align: center;
      transform: rotate(-7deg) scale(1);
      transition: transition(transform, $easing: bounce-out, $delay: 500ms);
    }

    [data-mode] & {
      b {
        transform: rotate(-7deg) scale(0);
        transition: transition(transform, $easing: bounce-in);
      }

      &::before {
        transform: translateY(-300%);
        opacity: 0;
      }

      &::after {
        transform: translateY(300%);
        opacity: 0;
      }
    }
  }

  .mode {
    position: relative;
    padding-bottom: 1rem;

    &__title {
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      width: 13rem;
      border: 0;
      appearance: none;
      background-color: transparent;
      font-size: 1.5rem;
      line-height: 2rem;
      color: var(--text-secondary);
      cursor: pointer;
      text-align: center;
      text-decoration: none;
      opacity: 0.85;

      b {
        display: block;
        text-transform: uppercase;
        font-size: 4.5rem;
        line-height: 6rem;
        color: var(--text-primary);
        transform-origin: center;
      }
    }
  }

  $modes: (host, join);

  @each $mode in $modes {
    $other-mode: nth($modes, 3 - (index($modes, $mode)));
    $direction: 2 * (1.5 - index($modes, $mode));

    &[data-mode="#{$mode}"] {
      .mode--#{$mode} {
        transform: translateX(calc((50% + 2.5rem) * #{$direction}));

        .mode__title {
          opacity: 1;
        }
      }

      .mode--#{$other-mode} {
        opacity: 0;
        transform: translateX(#{100% * $direction});
        pointer-events: none;
        touch-action: none;
      }

      ~ .mode-content--#{$mode} {
        touch-action: initial;
        pointer-events: initial;

        > * {
          transform: translateY(0);
          opacity: 1;
        }
      }
    }
  }
}

.mode-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  top: calc(33.333vh + 6rem);
  right: 0;
  left: 0;
  padding: 2rem;
  text-align: center;
  pointer-events: none;
  touch-action: none;

  > * {
    transform: translateY(25vh);
    opacity: 0;
  }
}

@media screen and (max-width: 25rem) {
  .mode-selector {
    flex-direction: column;
    align-items: center;
    align-self: stretch;

    &__or {
      flex-direction: row;
      margin: 0 2rem;
      transform: rotate(-7deg);

      b {
        transform: rotate(7deg);
      }

      &::before,
      &::after {
        margin: 0.5px 0;
        border-left: 0;
        border-top: 1px solid currentColor;
      }
    }

    &[data-mode] {
      .mode-selector__or {
        &::before {
          transform: translateX(-50vw);
        }

        &::after {
          transform: translateX(50vw);
        }
      }
    }

    &[data-mode="host"] {
      .mode--host {
        transform: translateY(calc(-40vh + 100% + 3rem));
      }

      .mode--join {
        transform: translateY(calc(50vh - 100% - 3rem));
      }
    }

    &[data-mode="join"] {
      .mode--join {
        transform: translateY(-40vh);
      }

      .mode--host {
        transform: translateY(-50vh);
      }
    }
  }

  .mode-content {
    top: 12rem;
  }
}
