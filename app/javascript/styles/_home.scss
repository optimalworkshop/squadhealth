.home {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100vw;
  min-height: 100vh;
  overflow: hidden;

  &::before {
    flex: 1;
    content: "";
  }

  &::after {
    flex: 2;
    content: "";
  }

  .close-button {
    position: absolute;
    top: 2rem;
    right: 2rem;
    transition: transition(transform, $easing: bounce-in, $duration: slow);
    transform: scale(0);
  }

  .mode-selector {
    &[data-mode] {
      ~ .close-button {
        transition-timing-function: easing(bounce-out);
        transform: scale(1.5);
      }
    }
  }
}

.mode-selector {
  display: flex;
  justify-content: center;
  align-items: flex-start;

  .mode {
    position: relative;
    padding-bottom: 1rem;
    transition: transition(transform opacity, $duration: slow);

    &__title {
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      width: 13rem;
      border: 0;
      appearance: none;
      background-color: transparent;
      font-size: 1.5rem;
      line-height: 2rem;
      color: var(--text-secondary);
      cursor: pointer;
      transition: transition(all);
      text-align: center;
      text-decoration: none;
      opacity: 0.85;

      b {
        display: block;
        text-transform: uppercase;
        font-size: 4.5rem;
        line-height: 6rem;
        color: var(--text-primary);
        transition: transition(color);
      }

      &:hover,
      &:focus,
      &:active {
        outline: none;
        opacity: 1;
      }
    }
  }

  &__or {
    align-self: stretch;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 1rem;
    color: var(--border);
    pointer-events: none;
    touch-action: none;
    transform: rotate(7deg);

    &::before,
    &::after {
      content: "";
      flex: 1;
      border-left: 1px solid currentColor;
      margin: 0 -0.5px;
      transition: transition(transform opacity, $duration: 500ms);
    }

    b {
      font-weight: normal;
      text-transform: uppercase;
      color: var(--text-secondary);
      font-size: 1.25rem;
      line-height: 3rem;
      width: 3rem;
      text-align: center;
      transition: transition(opacity, $delay: fast);
      transform: rotate(-7deg);
    }

    [data-mode] & {
      &::before {
        transform: translateY(-300%);
        opacity: 0;
      }

      &::after {
        transform: translateY(300%);
        opacity: 0;
      }
    }
  }

  $modes: (host, join);

  @each $mode in $modes {
    $other-mode: nth($modes, 3 - (index($modes, $mode)));
    $direction: 2 * (1.5 - index($modes, $mode));

    &[data-mode="#{$mode}"] {
      .mode--#{$mode} {
        transform: translateX(calc((50% + 2.5rem) * #{$direction}));
        transition-delay: duration(fast);

        .mode__title {
          opacity: 1;
        }
      }

      .mode--#{$other-mode} {
        transform: translateX(#{100% * $direction});
        opacity: 0;
      }

      .mode-selector__or {
        b {
          opacity: 0;
        }
      }
    }
  }
}

.mode-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  top: calc((100vh - 10rem) * 0.4 + 6rem);
  right: 0;
  left: 0;
  padding: 2rem;
  text-align: center;

  p {
    max-width: 13rem;
    color: var(--text-tertiary);
  }

  > * {
    max-width: 20rem;
    transform: translateY(50vh);
    opacity: 0;

    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        transition-delay: ($i - 1) * 100ms;
      }
    }
  }

  &--enter {
    > * {
      transform: translateY(50vh);
      opacity: 0;
    }

    &-active,
    &-done {
      > * {
        transition: transition(transform opacity, $duration: 500ms, $easing: decelerate);
        transform: translateY(0);
        opacity: 1;
      }
    }
  }

  &--exit {
    > * {
      transform: translateY(0);
      opacity: 1;
    }

    &-active,
    &-done {
      > * {
        transition: transition(transform opacity, $duration: 500ms, $easing: accelerate);
        transform: translateY(50vh);
        opacity: 0;

        @for $i from 1 through 10 {
          &:nth-last-child(#{$i}) {
            transition-delay: ($i - 1) * 100ms;
          }
        }
      }
    }
  }
}

@media screen and (max-width: 25rem) {
  .mode-selector {
    flex-direction: column;
    align-items: center;
    align-self: stretch;

    &__or {
      flex-direction: row;
      margin: 0 2rem;
      transform: rotate(-7deg);

      b {
        transform: rotate(7deg);
        transition-delay: 500ms;
      }

      &::before,
      &::after {
        margin: 0.5px 0;
        border-left: 0;
        border-top: 1px solid currentColor;
        transition-delay: 500ms;
      }
    }

    .mode--host,
    .mode--join {
      transition-delay: duration(slow);
    }

    &[data-mode] {
      .mode-selector__or {
        b,
        &::before,
        &::after {
          transition-delay: 0ms;
        }

        &::before {
          transform: translateX(-50vw);
        }

        &::after {
          transform: translateX(50vw);
        }
      }
    }

    &[data-mode="host"] {
      .mode--host {
        transition-delay: 0ms;
        transform: translateY(calc(-40vh + 100% + 3rem));
      }

      .mode--join {
        transition-delay: 0ms;
        transform: translateY(calc(50vh - 100% - 3rem));
      }
    }

    &[data-mode="join"] {
      .mode--join {
        transform: translateY(-40vh);
        transition-delay: 100ms;
      }

      .mode--host {
        transform: translateY(-50vh);
        transition-delay: 0ms;
      }

      ~ .mode-content {
        > * {
          @for $i from 1 through 10 {
            &:nth-child(#{$i}) {
              transition-delay: ($i + 2) * 100ms;
            }
          }
        }
      }
    }
  }

  .mode-content {
    top: 12rem;
  }
}
